{{ 'customer.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<!-- Підключення стилів Flatpickr -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<!-- Підключення Flatpickr JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="container-fluid container-registration-fluid">
  <div class="row">
    <div class="col-md-4 col-lg-6 d-none d-md-block">

      {% for block in section.blocks %}
        {% if block.type == 'custom_block' %}
          <div class="form-banner-block">
            <div class="block-banner-image-rectangle d-none d-lg-block">
              <img src="{{ block.settings.banner_image_rectangle | img_url: 'large' }}" alt="Original Image">
            </div>

            <div class="block-description" style="background-image: url('{{ block.settings.text_background | img_url: 'medium' }}');">
              <div class="block-description-text">
                <p>
                  {{ block.settings.block_description }}
                </p>
              </div>
            <!-- <div class="block-background" style="background-image: url('{{ block.settings.text_background | img_url: 'medium' }}');"> -->
            <!-- <div class="block-background">
              <img src="{{ block.settings.text_background | img_url: 'medium' }}" alt="Background Image">
            </div> -->
            </div>
              
            <div class="block-banner-image">
              <img src="{{ block.settings.banner_image | img_url: 'large' }}" alt="Original Image">
            </div>
          </div>
        {% endif %}
      {% endfor %}
    </div>
    <div class="col-12 col-md-7 col-lg-4 offset-lg-1">
      <div class="customer registration-form">
        <div class="progress-bar-container" id="progress-bar-container" style="display:none;">
          <span id="progress-text">1/3</span>
          <div class="progress-bar-background">
            <div class="progress-bar" id="progress-bar"></div>
          </div>
        </div>
        
  
        {%- form 'create_customer', novalidate: 'novalidate' -%}
          {%- if form.errors -%}
            <div class="form-errors-message">
              <ul>
                {%- for field in form.errors -%}
                  <li>
                    {%- if field == 'form' -%}
                      {{ form.errors.messages[field] }}
                    {%- else -%}
                      <a href="#RegisterForm-{{ field }}">
                        {{ form.errors.translated_fields[field] | capitalize }}
                        {{ form.errors.messages[field] }}
                      </a>
                    {%- endif -%}
                  </li>
                {%- endfor -%}
              </ul>
            </div>
            
          {%- endif -%}
  
          <!-- Step 0: Email and Terms -->
          <div class="step" id="step-0">
            <h2>
              Enter your email to get started
            </h2>
            <p>
              Already have an account?  
              <a href="{{ routes.account_login_url }}" class="btn btn-link">
                Log in here
              </a>
            </p>
            
            <div class="form-input-wrap form-floating-label">
              <input
                type="email"
                name="customer[email]"
                id="RegisterForm-email"
                class="form-control"
                {% if form.email %}
                  value="{{ form.email }}"
                {% endif %}
                spellcheck="false"
                autocapitalize="off"
                autocomplete="email"
                aria-required="true"
                {% if form.errors contains 'email' %}
                  aria-invalid="true"
                  aria-describedby="RegisterForm-email-error"
                {% endif %}
                placeholder=""
                required
              >
              <label for="RegisterForm-email">
                {{ 'customer.register.email' | t }}
              </label>
              <div class="invalid-feedback text-start">
                Please enter a valid email
              </div>
            </div>

            <div class="custom-checkbox-input text-start">
              <input type="checkbox" name="agree_to_terms" id="RegisterForm-AgreeToTerms" checked="checked" required>
              <label for="" class="custom-control-label">
                I agree to the
                <a href="/pages/privacy-policy" target="_blank" class="btn btn-link">privacy policy</a>
                and
                <a href="/pages/terms-conditions" target="_blank" class="btn btn-link">terms of service</a>
                .
              </label>
            </div>

            <button class="btn btn-primary w-100" type="button" onclick="nextStep(1)">Start Registration</button>
          </div>
  
          <!-- Step 1: Tell us about yourself -->
          <div class="step" id="step-1" style="display:none;">
            <h2 class="mb-5">
              Tell us about yourself
            </h2>
  
            <div class="form-input-wrap form-floating-label">
              <input
                type="text"
                name="customer[first_name]"
                id="RegisterForm-FirstName"
                class="form-control"
                {% if form.first_name %}
                  value="{{ form.first_name }}"
                {% endif %}
                autocomplete="given-name"
                placeholder=""
                required
              >
              <label for="RegisterForm-FirstName">
                {{ 'customer.register.first_name' | t }}
              </label>
              <div class="invalid-feedback text-start">
                Please enter your legal first name
              </div>
              <div class="min-length-feedback text-start">
                First name must be at least 3 characters long
              </div> 
            </div>
            
            <div class="form-input-wrap form-floating-label">
              <input
                type="text"
                name="customer[last_name]"
                id="RegisterForm-LastName"
                class="form-control"
                {% if form.last_name %}
                  value="{{ form.last_name }}"
                {% endif %}
                autocomplete="family-name"
                placeholder=""
                required
              >
              <label for="RegisterForm-LastName">
                {{ 'customer.register.last_name' | t }}
              </label>
              <div class="invalid-feedback text-start">
                Please enter your legal last name
              </div>
            </div>

            <div class="form-floating-label">
              <input 
                type="text" 
                name="customer[name]" 
                id="RegisterForm-PreferredName" 
                class="form-control" 
                autocomplete="nickname" 
                placeholder=""
              >
              <label for="RegisterForm-PreferredName">
                Preferred name (optional)
              </label>
            </div>
            <div class="buttons-group d-flex justify-content-between">
              <button class="btn btn-outline-primary" type="button" onclick="previousStep(0)">
                <i class="bi bi-caret-left-fill"></i>
                Previous
              </button>
              <button class="btn btn-primary" type="button" onclick="nextStep(2)">
                Next
                <i class="bi bi-caret-right-fill"></i>
              </button>
            </div>
          </div>
  
          <!-- Step 2: Your basic info -->
          <div class="step" id="step-2" style="display:none;">
            <h2 class="mb-5">
              Your basic info
            </h2>
  
            <div class="form-input-wrap form-floating-label">
              <input type="date" id="dob" class="w-100 flatpickr-input" name="customer[note][date_of_birth]" required>
  
              <label for="dob">Date of Birth:</label>
              <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4.872 10.4955C5.16977 10.4955 5.45535 10.3772 5.6659 10.1667C5.87646 9.9561 5.99475 9.67052 5.99475 9.37275C5.99475 9.07498 5.87646 8.7894 5.6659 8.57885C5.45535 8.36829 5.16977 8.25 4.872 8.25C4.57423 8.25 4.28865 8.36829 4.0781 8.57885C3.86754 8.7894 3.74925 9.07498 3.74925 9.37275C3.74925 9.67052 3.86754 9.9561 4.0781 10.1667C4.28865 10.3772 4.57423 10.4955 4.872 10.4955ZM5.9955 13.1235C5.9955 13.4213 5.87721 13.7068 5.66665 13.9174C5.4561 14.128 5.17052 14.2463 4.87275 14.2463C4.57498 14.2463 4.2894 14.128 4.07885 13.9174C3.86829 13.7068 3.75 13.4213 3.75 13.1235C3.75 12.8257 3.86829 12.5402 4.07885 12.3296C4.2894 12.119 4.57498 12.0007 4.87275 12.0007C5.17052 12.0007 5.4561 12.119 5.66665 12.3296C5.87721 12.5402 5.9955 12.8257 5.9955 13.1235ZM9 10.4955C9.29777 10.4955 9.58335 10.3772 9.7939 10.1667C10.0045 9.9561 10.1227 9.67052 10.1227 9.37275C10.1227 9.07498 10.0045 8.7894 9.7939 8.57885C9.58335 8.36829 9.29777 8.25 9 8.25C8.70223 8.25 8.41665 8.36829 8.2061 8.57885C7.99554 8.7894 7.87725 9.07498 7.87725 9.37275C7.87725 9.67052 7.99554 9.9561 8.2061 10.1667C8.41665 10.3772 8.70223 10.4955 9 10.4955ZM10.1235 13.1235C10.1235 13.4213 10.0052 13.7068 9.79465 13.9174C9.5841 14.128 9.29852 14.2463 9.00075 14.2463C8.70298 14.2463 8.4174 14.128 8.20685 13.9174C7.99629 13.7068 7.878 13.4213 7.878 13.1235C7.878 12.8257 7.99629 12.5402 8.20685 12.3296C8.4174 12.119 8.70298 12.0007 9.00075 12.0007C9.29852 12.0007 9.5841 12.119 9.79465 12.3296C10.0052 12.5402 10.1235 12.8257 10.1235 13.1235ZM13.1235 10.4955C13.4213 10.4955 13.7068 10.3772 13.9174 10.1667C14.128 9.9561 14.2463 9.67052 14.2463 9.37275C14.2463 9.07498 14.128 8.7894 13.9174 8.57885C13.7068 8.36829 13.4213 8.25 13.1235 8.25C12.8257 8.25 12.5402 8.36829 12.3296 8.57885C12.119 8.7894 12.0007 9.07498 12.0007 9.37275C12.0007 9.67052 12.119 9.9561 12.3296 10.1667C12.5402 10.3772 12.8257 10.4955 13.1235 10.4955ZM18 3.75C18 2.75544 17.6049 1.80161 16.9016 1.09835C16.1984 0.395088 15.2446 0 14.25 0H3.75C2.75544 0 1.80161 0.395088 1.09835 1.09835C0.395088 1.80161 0 2.75544 0 3.75V14.25C0 15.2446 0.395088 16.1984 1.09835 16.9016C1.80161 17.6049 2.75544 18 3.75 18H14.25C15.2446 18 16.1984 17.6049 16.9016 16.9016C17.6049 16.1984 18 15.2446 18 14.25V3.75ZM1.5 6H16.5V14.25C16.5 14.8467 16.2629 15.419 15.841 15.841C15.419 16.2629 14.8467 16.5 14.25 16.5H3.75C3.15326 16.5 2.58097 16.2629 2.15901 15.841C1.73705 15.419 1.5 14.8467 1.5 14.25V6ZM3.75 1.5H14.25C14.8467 1.5 15.419 1.73705 15.841 2.15901C16.2629 2.58097 16.5 3.15326 16.5 3.75V4.5H1.5V3.75C1.5 3.15326 1.73705 2.58097 2.15901 2.15901C2.58097 1.73705 3.15326 1.5 3.75 1.5Z" fill="#285445"/>
              </svg>
              <div class="invalid-feedback text-start">
                Please enter your date of birth to continue
              </div>
            </div>

            <!-- gender -->
            <fieldset class="form-input-wrap custom-radio-group text-start">
              <legend>Gender assigned at birth</legend>
              <div class="custom-radio-input">
                <input class="form-check-input" type="radio" name="customer[note][gender]" id="gender-option1" value="male" required>
                <label class="form-check-label" for="gender-option1">
                  <span class="radio-circle"></span>
                  Male
                </label>
              </div>
              <div class="custom-radio-input">
                <input class="form-check-input" type="radio" name="customer[note][gender]" id="gender-option2" value="female" required>
                <label class="form-check-label" for="gender-option2">
                  <span class="radio-circle"></span>
                  Female
                </label>
              </div>
              <div class="custom-radio-input">
                <input class="form-check-input" type="radio" name="customer[note][gender]" id="gender-option3" value="intersex" required>
                <label class="form-check-label" for="gender-option3">
                  <span class="radio-circle"></span>
                  Intersex
                </label>
              </div>
              <div class="invalid-feedback">Please select your gender</div>
            </fieldset>
            <div class="buttons-group d-flex justify-content-between">
              <button class="btn btn-outline-primary" type="button" onclick="previousStep(1)">
                <i class="bi bi-caret-left-fill"></i>
                Previous
              </button>
              <button class="btn btn-primary" type="button" onclick="nextStep(3)">
                Next
                <i class="bi bi-caret-right-fill"></i>
              </button>
            </div>
          </div>
          
          <!-- Step 3: Shipping details -->
          <!-- <div class="step" id="step-3" style="display:none;"> -->
          <div style="display: none;">
            <h2 class="mb-5">
              Shipping details
            </h2>
            <button class="btn btn-outline-primary" type="button" onclick="previousStep(2)">Previous</button>
            <button class="btn btn-primary" type="button" onclick="nextStep(4)">Next</button>
          </div>
  
          <!-- Step 4: Create your password -->
          <!-- <div class="step" id="step-4" style="display:none;"> -->
          <div class="step" id="step-3" style="display:none;">
            <h2 class="mb-5">
              Create your password
            </h2>

            <div class="form-input-wrap form-floating-label">
              <input
                type="password"
                name="customer[password]"
                id="RegisterForm-password"
                class="w-100"
                aria-required="true"
                {% if form.errors contains 'password' %}
                  aria-invalid="true"
                  aria-describedby="RegisterForm-password-error"
                {% endif %}
                placeholder=""
                required
              >
              <label for="RegisterForm-password">
                {{ 'customer.register.password' | t }}
              </label>
              <div class="invalid-feedback text-start">
                Please enter your password
              </div>
            </div>
            
           <div class="form-input-wrap form-floating-label">
              <input
                type="password"
                name="customer[password_confirmation]"
                id="RegisterForm-password-confirmation"
                class="w-100"
                aria-required="true"
                {% if form.errors contains 'password' %}
                  aria-invalid="true"
                  aria-describedby="RegisterForm-password-error"
                {% endif %}
                placeholder=""
                required
              >
              <label for="RegisterForm-password-confirmation">
                Confirm password
              </label>
              <div class="invalid-feedback text-start">
                Please confirm your password
              </div>
            </div>
            
            
            {%- if form.errors contains 'password' -%}
              <span id="RegisterForm-password-error" class="form__message">
                <span class="svg-wrapper">
                  {{- 'icon-error.svg' | inline_asset_content -}}
                </span>
                {{ form.errors.translated_fields.password | capitalize }}
                {{ form.errors.messages.password }}.
              </span>
            {%- endif -%}
            <div class="buttons-group d-flex justify-content-between">
              <button class="btn btn-outline-primary" type="button" onclick="previousStep(2)">
                <i class="bi bi-caret-left-fill"></i>
                Previous
              </button>
              <button class="btn btn-primary" type="submit">
                Continue  
              </button>
            </div>
          </div>          
    
        {%- endform -%}
        
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Отримуємо поточну дату
    const today = new Date();

    // Розраховуємо дату 18 років тому
    const minDate = new Date();
    minDate.setFullYear(today.getFullYear() - 18); // 18 років тому
  
    // Розраховуємо дату 100 років тому
    const maxDate = new Date();
    maxDate.setFullYear(today.getFullYear() - 100); // 100 років тому
  
    flatpickr("#dob", {
      dateFormat: "Y-m-d",  // Формат дати
      defaultDate: "today",
      altInput: true, // Показувати альтернативне поле
      altFormat: "F j, Y", // Альтернативний формат для зручності користувачів
      minDate: maxDate,     // Максимальна дозволена дата (100 років тому)
      maxDate: minDate,     // Мінімальна дозволена дата (18 років тому)
      allowInput: false, // Дозволяє вводити дату вручну
      onReady: function (selectedDates, dateStr, instance) {
        instance.input.classList.add("flatpickr-input");
      }
    });
  });
  
  let currentStep = 0;
  const totalSteps = 3;
  
  function updateProgressBar() {
    const progress = (currentStep / totalSteps) * 100;
    document.getElementById('progress-bar').style.width = progress + '%';
    
    document.getElementById('progress-text').textContent = `${currentStep}/${totalSteps}`;
  }


  function validateStep(step) {
    // console.log('Validating step: ', step);
    let valid = true; // Початково вважаємо, що всі поля валідні
    
    // console.log('validate step: ', step);
    
    // Отримуємо всі поля на поточному кроці
    const fields = document.querySelectorAll(`#step-${step} input, #step-${step} select, #step-${step} textarea`);
    
    // Перевіряємо кожне поле на валідність
    fields.forEach(field => {
      // console.log('field:', field);
  
      // Пропускаємо поля типу або checkbox, або ті, що не є обов'язковими
      if (field.type === 'checkbox' || !field.required) {
        // console.log('radio radio radio')
        return; // Переходимо до наступного поля
      }
  
      let formFloatingWrapper = undefined;
      
      if (field.type === 'radio') {
        formFloatingWrapper = field.closest('fieldset.custom-radio-group'); // Знаходимо обгортку .form-floating
      } else {
        formFloatingWrapper = field.closest('.form-floating-label'); // Знаходимо обгортку .form-floating
      }
      
      const feedbackElement = formFloatingWrapper.querySelector('.invalid-feedback'); // Повідомлення про помилку
  
      // Перевірка для інпутів типу date, що працюють з flatpickr
      if (field.type === 'text' && field.classList.contains('flatpickr-input')) {
        // console.log('It is date of birthday filed!')
        // Для flatpickr перевіряємо значення вручну
        if (!field.value) {
          valid = false;
          formFloatingWrapper.classList.add('is-invalid');
          field.classList.add('is-invalid');
          if (feedbackElement) {
            feedbackElement.style.display = 'block'; // Показуємо повідомлення про помилку
          }
        } else {
          formFloatingWrapper.classList.remove('is-invalid');
          field.classList.remove('is-invalid');
          if (feedbackElement) {
            feedbackElement.style.display = 'none'; // Приховуємо повідомлення про помилку
          }
        }
      } else if (field.type === 'radio') {
        // Перевірка для радіо кнопок, чи вибране хоча б одне значення
        const radioGroup = document.querySelectorAll(`#step-${step} input[name="${field.name}"]`);
        const isRadioSelected = Array.from(radioGroup).some(radio => radio.checked);
  
        if (isRadioSelected) {
          formFloatingWrapper.classList.remove('is-invalid');
          radioGroup.forEach(radio => radio.classList.remove('is-invalid'));
          if (feedbackElement) {
            feedbackElement.style.display = 'none'; // Приховуємо повідомлення про помилку
          }
        } else {
          valid = false;
          formFloatingWrapper.classList.add('is-invalid');
          radioGroup.forEach(radio => radio.classList.add('is-invalid'));
          if (feedbackElement) {
            feedbackElement.style.display = 'block'; // Показуємо повідомлення про помилку
          }
        }
      } else {
        // Стандартна перевірка для інших полів
        if (!field.checkValidity()) {
          valid = false;
          formFloatingWrapper.classList.add('is-invalid');
          field.classList.add('is-invalid');
          if (feedbackElement) {
            feedbackElement.style.display = 'block'; // Показуємо повідомлення про помилку
          }
        } else {
          formFloatingWrapper.classList.remove('is-invalid');
          field.classList.remove('is-invalid');
          if (feedbackElement) {
            feedbackElement.style.display = 'none'; // Приховуємо повідомлення про помилку
          }
        }
      }
    });
  
    // console.log('form is valid? ', valid);
  
    return valid;
  }
    
  function nextStep(step) {
    // console.log('Goindg to next step: ', step)

    const registrationFormWrap = document.querySelector('.customer.registration-form');
  
    // Перевіряємо, чи форма знайдена
    if (registrationFormWrap) {
      // Перевіряємо, чи немає класу 'steps-wrap'
      if (!registrationFormWrap.classList.contains('steps-wrap')) {
        // Додаємо клас 'steps-wrap', якщо його немає
        registrationFormWrap.classList.add('steps-wrap');
      }
    }
    
    if (!validateStep(currentStep)) {
      
      return; // Якщо валідація не пройшла, не переходимо на наступний крок
    }
    // valid = true;
    
    const currentStepElement = document.getElementById(`step-${currentStep}`);
    currentStepElement.style.display = 'none';
  
    currentStep = step;
    const nextStepElement = document.getElementById(`step-${currentStep}`);
    nextStepElement.style.display = 'block';
  
    if (currentStep > 0) {
      document.getElementById('progress-bar-container').style.display = 'flex';
    }
  
    updateProgressBar();
    setupInputValidation(currentStep); 
  }
  
  function previousStep(step) {
    // console.log('Goindg to previous step:', step);
    const currentStepElement = document.getElementById(`step-${currentStep}`);
    currentStepElement.style.display = 'none';
  
    currentStep = step;
    const prevStepElement = document.getElementById(`step-${currentStep}`);
    prevStepElement.style.display = 'block';

    if (currentStep === 0) {
      document.getElementById('progress-bar-container').style.display = 'none';
    }
  
    updateProgressBar();
  }

  function setupInputValidation(step) {
    // console.log('setupInputValidation for step:', step);
    const fields = document.querySelectorAll(`#step-${step} input, #step-${step} select, #step-${step} textarea`);
    
    fields.forEach(field => {
      // Видаляємо попередні обробники перед додаванням нового (запобігання дублювання)
      field.removeEventListener('input', handleInputValidation);
      field.addEventListener('input', handleInputValidation);
    });
  }

  function handleInputValidation(event) {
    // console.log('inputting...');
    const field = event.target;
    const formFloatingWrapper = field.closest('.form-input-wrap'); // Знаходимо обгортку .form-floating
    const feedbackElement = formFloatingWrapper?.querySelector('.invalid-feedback'); // Повідомлення про помилку
    const minLengthFeedback = formFloatingWrapper?.querySelector('.min-length-feedback'); // Повідомлення для мінімальної кількості символів
  
    // Перевірка валідності поля
    const fields = formFloatingWrapper.querySelectorAll('input, select, textarea'); // Отримуємо всі інпути, селекти та текстові області в обгортці
    
    // Перевірка валідності поля
    if (field.checkValidity()) {
      formFloatingWrapper?.classList.remove('is-invalid'); // Видаляємо клас is-invalid з обгортки
      field.classList.remove('is-invalid'); // Видаляємо клас is-invalid з інпуту
      fields.forEach(input => {
        input.classList.remove('is-invalid');
      });
      if (feedbackElement) {
        feedbackElement.style.display = 'none'; // Приховуємо повідомлення про помилку
      }
      if (minLengthFeedback) {
        minLengthFeedback.style.display = 'none'; // Приховуємо повідомлення про мінімальну кількість символів
      }
    } else {
      formFloatingWrapper?.classList.add('is-invalid'); // Додаємо клас is-invalid до обгортки
      field.classList.add('is-invalid'); // Додаємо клас is-invalid до інпуту
      if (feedbackElement) {
        feedbackElement.style.display = 'block'; // Показуємо повідомлення про помилку
      }
  
      // Перевірка на мінімальну кількість символів
      if (field.validity.tooShort) {
        if (minLengthFeedback) {
          minLengthFeedback.style.display = 'block'; // Показуємо повідомлення про мінімальну кількість символів
        }
      }
    }
  }

  document.addEventListener('DOMContentLoaded', function() {
    document.getElementById('progress-bar-container').style.display = 'none';
    updateProgressBar();
    setupInputValidation(currentStep); // Додаємо валідацію при завантаженні сторінки
  });

  document.querySelector("form#create_customer").addEventListener("submit", function(event) {
    // Зупиняємо відправку форми для перевірки
    event.preventDefault();
  
    // Отримуємо поля пароля і підтвердження пароля
    const passwordField = document.getElementById("RegisterForm-password");
    const passwordFieldWrapper = passwordField.closest('.form-input-wrap');
    const passwordConfirmationField = document.getElementById("RegisterForm-password-confirmation");
    const passwordConfirmationFieldWrapper = passwordConfirmationField.closest('.form-input-wrap');
    
    let valid = true;
  
    // Перевірка на наявність пароля та мінімум 8 символів
    if (!passwordField.value || passwordField.value.length < 8) {
      passwordField.setCustomValidity('');
      const feedbackElement = passwordField.closest('.form-input-wrap').querySelector('.invalid-feedback');


      if (!passwordField.value) {
        feedbackElement.textContent = 'Please enter your password'; // Кастомне повідомлення для порожнього поля
        // console.log('Please enter your password')
      } else if (passwordField.value.length < 8) {
        feedbackElement.textContent = 'Password must be at least 8 characters long.'; // Кастомне повідомлення для довжини
        // console.log('Password must be at least 8 characters long.')
      }
      valid = false;
      passwordFieldWrapper.classList.add("is-invalid");
      passwordField.classList.add("is-invalid");
      feedbackElement.style.display = 'block';
    } else {
      passwordFieldWrapper.classList.remove("is-invalid");
      passwordField.classList.remove("is-invalid");
      passwordField.closest('.form-input-wrap').querySelector('.invalid-feedback').style.display = 'none';
    }
  
    // Перевірка на співпадіння пароля та підтвердження пароля
    if (passwordConfirmationField.value !== passwordField.value) {
      valid = false;
      passwordConfirmationFieldWrapper.classList.add("is-invalid");
      passwordConfirmationField.classList.add("is-invalid");
      passwordConfirmationField.closest('.form-input-wrap').querySelector('.invalid-feedback').style.display = 'block';
    } else {
      passwordConfirmationFieldWrapper.classList.remove("is-invalid");
      passwordConfirmationField.classList.remove("is-invalid");
      passwordConfirmationField.closest('.form-input-wrap').querySelector('.invalid-feedback').style.display = 'none';
    }
  
    if (valid) {
      event.target.submit();
    }
  });

</script>

<style>
  .min-length-feedback {
    display: none;
  }

  #create_customer {
    margin-top: 4px;
  }
  
  #create_customer .custom-checkbox-input label {
    //styleName: Body/Body 1;
    font-family: Avenir;
    font-size: 16px;
    font-weight: 400;
    line-height: 24px;
    text-align: left;
    text-underline-position: from-font;
    text-decoration-skip-ink: none;
    color: #1E1E1E;
  }

  #create_customer .custom-checkbox-input label .btn-link {
    padding: 0;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;
    line-height: inherit;
    position: relative;
    top: -2px;
  }
  
  .registration-form-container {
    max-width: 600px;
    margin: 0 auto;
    text-align: center;
  }

  .registration-form-question h2 {
    font-size: 24px;
    margin-bottom: 20px;
  }

  .registration-form-navigation {
    display: flex;
    justify-content: space-between;
    margin-top: 20px;
  }

  .registration-form-navigation button {
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    transition: background-color 0.3s ease, opacity 0.3s ease;
  }

  .registration-form-navigation button:disabled {
    background-color: #ccc;
    color: #fff;
    cursor: not-allowed;
    opacity: 0.5;
  }

  .registration-form-navigation button:not(:disabled) {
    background-color: #5B814B;
    color: white;
  }

  .progress-bar-container {
    width: 100%;
    display: flex;
    align-items: center;
    border-radius: 10px;
    margin: 20px 0;
    padding: 0;
    justify-content: flex-start;
  }

  #progress-text {
    font-family: Nunito Sans;
    font-size: 16px;
    font-weight: 400;
    line-height: 24px;
    text-align: left;
    text-underline-position: from-font;
    text-decoration-skip-ink: none;
    color: #285445;
    margin-right: 12px;
    flex-shrink: 0;
  }

  .progress-bar-background {
    width: 100%;
    background-color: #C7D7C0;
    height: 8px;
    border-radius: 8px;
    overflow: hidden;
  }

  .progress-bar {
    height: 8px;
    border-radius: 8px;
    background-color: #57814A;
    width: 0;
    transition: width 0.5s ease-in-out;
    display: block!important;
  }
</style>

{% schema %}
{
  "name": "t:sections.main-register.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ],
  "blocks": [
    {
      "type": "custom_block",
      "name": "Form Banner Block",
      "settings": [
        {
          "type": "textarea",
          "id": "block_description",
          "label": "Short Description",
          "default": "Get back on track, your journey continues"
        },
        {
          "type": "image_picker",
          "id": "text_background",
          "label": "Background for Text Section (PNG)"
        },
        {
          "type": "image_picker",
          "id": "banner_image_rectangle",
          "label": "Background rectangle (PNG)"
        },
        {
          "type": "image_picker",
          "id": "banner_image",
          "label": "Main Banner Image (PNG)"
        }
      ]
    }
  ],
}
{% endschema %}
